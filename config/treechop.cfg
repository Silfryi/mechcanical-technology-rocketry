# Configuration file

~CONFIG_VERSION: 0.2

chop-counting {
    # Method to use for computing the number of chops needed to fell a tree
    # Options: LINEAR, LOGARITHMIC [default: LOGARITHMIC]
    S:algorithm=LOGARITHMIC

    # Whether felling a tree can require more chops than the number of blocks in the tree
    B:canRequireMoreChopsThanBlocks=false

    # How to round the number of chops needed to fell a tree; this is more meaningful for smaller trees
    # Options: DOWN, NEAREST, UP [default: NEAREST]
    S:rounding=DOWN

    ##########################################################################################################
    # logarithmic
    #--------------------------------------------------------------------------------------------------------#
    # See https://github.com/hammertater/treechop/#logarithmic
    ##########################################################################################################

    logarithmic {
        # Determines the number of chops required to fell a tree; higher values require more chops for bigger trees [range: 0.0 ~ 10000.0, default: 10.0]
        S:a=7.0
    }

    ##########################################################################################################
    # linear
    #--------------------------------------------------------------------------------------------------------#
    # See https://github.com/hammertater/treechop/#linear
    ##########################################################################################################

    linear {
        # The base number of chops required to fell a tree regardless of its size [range: -10000.0 ~ 10000.0, default: 0.0]
        S:baseNumChops=0.0

        # The number of chops per block required to fell a tree; if chopsPerBlock = 0.5, it will take 50 chops to fell a 100 block tree [range: 0.0 ~ 1.0, default: 1.0]
        S:chopsPerBlock=1.0
    }

}


compatibility {

    general {
        # Whether to prevent infinite loops when chopping; fixes crashes when using modded items that break multiple blocks
        B:preventChopRecursion=true

        # Whether to prevent chopping during right-click actions
        B:preventChoppingOnRightClick=false

        blacklist {
            # Whether the listed items should be blacklisted or whitelisted
            # Options: BLACKLIST, WHITELIST [default: BLACKLIST]
            S:blacklistOrWhitelist=WHITELIST

            # Whether any axe can be used to chop down trees
            B:canAnyAxeBeUsed=true

            # Whether any breaking of wood blocks, chopping or otherwise, can be done only with a specified tool
            B:canOnlySpecifiedBeUsed=true

            # Comma-separated list of items that should not chop when used to break a log
            # Ore dictionary names are also acceptable [default: mekanism:atomicdisassembler,]
            S:choppingToolsBlacklist=mekanism:atomicdisassembler,

            # Whether other tools (shovel, pickaxe, hoe) can be used to destroy log blocks to fell a tree, for slightly less wood per tree. REQUIRES "canOnlySpecifiedBeUsed"
            B:doOtherToolsDestroyWood=true

            # Comma-separated list of items that chop instantly
            # Ore dictionary names are also acceptable [default: mekanism:atomicdisassembler,]
            S:instantChopList=mekanism:atomicdisassembler,
        }

        specific {
            B:projectMMO=true
        }

    }

}


default-player-settings {

    chopping {
        # Whether to enable chopping when in creative mode (even when false, sneaking can still enable chopping)
        B:chopInCreativeMode=true

        # Default setting for whether or not the user wishes to chop (can be toggled in-game)
        B:choppingEnabled=true

        # Default setting for whether or not the user wishes to fell tree when chopping (can be toggled in-game)
        B:fellingEnabled=true

        # Default setting for the effect that sneaking has on chopping (can be cycled in-game)
        # Options: NONE, INVERT_CHOPPING, INVERT_FELLING [default: INVERT_CHOPPING]
        S:sneakBehavior=INVERT_CHOPPING

        # Whether to ignore trees without connected leaves
        B:treesMustHaveLeaves=false
    }

    visuals {

        chopping-indicator {
            # Whether to show an on-screen icon indicating whether targeted blocks can be chopped
            B:enabled=true

            # Horizontal location of the indicator relative to the player's crosshairs; positive values move the indicator to the right [range: -256 ~ 256, default: 16]
            I:xOffset=16

            # Vertical location of the indicator relative to the player's crosshairs; positive values move the indicator down [range: -256 ~ 256, default: 0]
            I:yOffset=0
        }

    }

}


permissions {
    # Whether the client GUI is able to be accessed at all
    B:clientGUIEnabled=false

    # Whether this mod is enabled or not
    B:enabled=true

    chopping-enabled {
        B:canBeFalse=true
        B:canBeTrue=true
    }

    felling-enabled {
        B:canBeFalse=false
        B:canBeTrue=true
    }

    sneak-behavior {
        B:canBeInvertChopping=true
        B:canBeInvertFelling=false
        B:canBeNone=false
    }

    tree-must-have-leaves {
        B:canBeFalse=true
        B:canBeTrue=false
    }

    chop-in-creative-mode {
        B:canBeFalse=true
        B:canBeTrue=true
    }

}


settings-screen {
    # Whether to show chat confirmations when using hotkeys to change chop settings
    B:showFeedbackMessages=false

    # Whether to show in-game options for enabling and disable felling
    B:showFellingOptions=true
}


tree-detection {
    # Whether to destroy leaves when a tree is felled
    B:breakLeaves=true

    # Whether non-decayable leaves are ignored when detecting leaves
    B:ignorePersistentLeaves=false

    # Comma-separated list of blocks that are automatically broken when attached to a felled tree and breakLeaves=true
    # Ore dictionary names are also acceptable [default: treeLeaves,]
    S:leavesBlocks=treeLeaves,

    # Comma-separated list of blocks that can be chopped
    # Ore dictionary names are also acceptable [default: logWood,]
    S:logBlocks=logWood,debarkedLogWood

    # Maximum distance from tree blocks to destroy leaves blocks when felling (Note: smart leaves destruction is not supported in 1.12.2) [range: 0 ~ 16, default: 4]
    I:maxBreakLeavesDistance=4

    # Maximum number of leaves block that can destroyed when a tree is felled [range: 1 ~ 8096, default: 1024]
    I:maxNumLeavesBlocks=1024

    # Maximum number of log block that can be detected to belong to one tree [range: 1 ~ 8096, default: 512]
    I:maxNumTreeBlocks=512
}


